{"version":3,"sources":["components/NavBar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","React","createElement","className","data-bs-theme","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","concat","role","aria-checked","aria-labelledby","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","rows","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.c7beab66.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nexport default function NavBar(props) {\n  return (\n    <div>\n      <nav\n        className=\"navbar navbar-expand-lg bg-body-tertiary\"\n        data-bs-theme={props.mode}\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            {props.title}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  Home\n                </a>\n              </li>\n              {/* <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\">\n                  {props.aboutText}\n                </a>\n              </li> */}\n            </ul>\n            {/* <form className=\"d-flex\" role=\"search\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                aria-label=\"Search\"\n              />\n              <button\n                className=\"btn btn-outline-primary btn-primary text-dark\"\n                type=\"submit\"\n              >\n                Search\n              </button>\n            </form> */}\n            <div\n              className={`form-check form-switch text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n            >\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                role=\"switch\"\n                aria-checked=\"false\"\n                aria-labelledby=\"foo\"\n                id=\"flexSwitchCheckDefault\"\n                onClick={props.toggleMode}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                {props.mode === \"light\" ? \"light\" : \"dark\"} mode enabled\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n};\n// NavBar.defaultProps = {\n//   title: \"Title likho\",\n//   aboutText: \"About likho\",\n// };\n","import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nexport default function TextForm(props) {\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/); //regex => agar ek ya ek se zada spaces hongi toh usko split krke array bana lega\n    setText(newText.join(\" \"));\n    props.showAlert(\"Removed Extra Spaces\", \"success\");\n  };\n  const handleCopy = () => {\n    let text = document.getElementById(\"myBox\");\n    text.select(); //used to select whole text\n    navigator.clipboard.writeText(text.value); //goes to clipboard and write text value\n    props.showAlert(\"Text Copied\", \"success\");\n  };\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to Uppercase\", \"success\");\n  };\n  const handleLoClick = () => {\n    // console.log(\"Lowercase was clicked\" + text);\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Lowercase\", \"success\");\n  };\n  const handleOnChange = (event) => {\n    // console.log(\"onchange\");\n    setText(event.target.value); //sets value or key you press\n  };\n  const handleClClick = (event) => {\n    // console.log(\"Clear was clicked\" + text);\n    let newText = \"\";\n    setText(newText);\n    props.showAlert(\"Text Cleared\", \"success\");\n  };\n  const [text, setText] = useState(\"Enter text here... \");\n  return (\n    <>\n      <div className=\"container my-4\">\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className={`form-control bg-${props.mode} text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n            id=\"myBox\"\n            value={text}\n            rows=\"8\"\n            onChange={handleOnChange}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\n          Convert to Uppercase\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\n          Convert to Lowecase\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleClClick}>\n          Clear\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\n          Copy\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\n          Remove Extra Spaces\n        </button>\n      </div>\n      <div className=\"container my-3\">\n        <h1>Your text summary</h1>\n        <p>\n          {text.split(\" \").length - 1} words and {text.length} characters\n        </p>\n        <p>{0.008 * text.split(\"\").length} Minutes read</p>\n        <h2>Preview</h2>\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n  const capitalize = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n  return (\n    props.alert && (\n      <div>\n        <div\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n        </div>\n      </div>\n    )\n  );\n}\n","import \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light\";\n    }\n  };\n  return (\n    <>\n      <NavBar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <TextForm\n        showAlert={showAlert}\n        heading=\"Enter text to analyze\"\n        mode={mode}\n      />\n\n      {/* <BrowserRouter>\n        <Routes>\n          <Route exact path=\"\" element={<></>}/>\n          <Route exact path=\"/about\" element={<About />} />\n        </Routes>\n      </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}